<section class="col-12">
  <div class="row">
    <div id="room" class="col-12 game-container">
      <div class="row">
        <div id="round" class="col-6 round-counter"></div>
        <div id="time" class="col-6"></div>
      </div>
      <div class="row">
        <div id="word" class="col-12"></div>
      </div>
      <div class="row">
        <div id="comunication" class="col-12 comunication">
        </div>
      </div>
      <div id="footeer" class="row">
        <div id="control" class="col-6">
          <div class="row">
            <div id="btn-next" class="col-6"></div>
            <input type="text" id="send-word" class="col-6">
          </div>
        </div>
        <div id="score" class="row">
          <div class="col-12" id="words-arr"></div>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" type="text/javascript"></script>
<script>
/*
**  UTILS
*/
let conected_flag = 0;

handleMessage = (message) => {
  if (message.destinationName == 'Game/common') {
    let com = document.querySelector('#comunication').innerHTML+=`<p>${message.payloadString}\n</p>`;
  }
  
};

/*
**   END UTILS
*/

let host = '192.168.1.33'
let port = Number(9001);
let client_id = cookieValue("NickName");

// client instance
let client = new Paho.MQTT.Client(host, port, client_id);



// set callback handlers
client.onConnectionLost = onConnectionLost;
client.onMessageArrived = onMessageArrived;

let onConnect = () => {
  console.log("onConnect");
  connected_flag = 1;
   
  /*
  **  Cuando se conecta, se subscribe al topico comun y al topico propio del usuario:
  **    Topicos:
  **      Game/common
  **      Game/user_id
  */

  let userTopic = `Game/${client_id}`;
  let commonTopic = 'Game/common';

  client.subscribe(userTopic);
  client.subscribe(commonTopic);
  
  /*
  **  Envia un saludo por el chat comun.
  **  Envia su topic por el topic del usuario.
  */

  //msgComun:
  let msg = `Jugador: ${client_id} conectado`;
  let messageCommon = new Paho.MQTT.Message(msg);
  messageCommon.destinationName = commonTopic;
  client.send(messageCommon);
  //msgTopic:
  let msgt = userTopic;
  let messageTopic = new Paho.MQTT.Message(msgt);
  messageTopic.destinationName = userTopic;
  client.send(messageTopic);
}

function onError() {
    console.log("error");
}

// Trying to connect

client.connect({ onSuccess: onConnect , onFailure: onError});

// called when the client loses its connection
function onConnectionLost(){
    console.log("connection lost");
	  connected_flag=0;
}

// called when a message arrives
function onMessageArrived(message) {
  handleMessage(message)
  console.log("onMessageArrived:"+message.payloadString);
  console.log("topic: ", message.destinationName);
}

</script>